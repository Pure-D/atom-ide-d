var e=require("atom-languageclient").AutoLanguageClient,a="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},r={},s=a.parcelRequire4554;null==s&&((s=e=>{if(e in t)return t[e].exports;if(e in r){let a=r[e];delete r[e];let s={id:e,exports:{}};return t[e]=s,a.call(s.exports,s,s.exports),s.exports}var a=Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=(e,a)=>{r[e]=a},a.parcelRequire4554=s),s.register("7d62q",((e,a)=>{e.exports=Promise.resolve(require("./atom-package-deps.0b87713d.js")).then((()=>s("2ZqOd")))})),s.register("6ng0p",((e,a)=>{e.exports=Promise.resolve(require("./installation.d5898174.js")).then((()=>s("7cE4A")))})),module.exports=new class extends e{async activate(){super.activate(),atom.packages.isPackageLoaded("atom-ide-base")||(await(await s("7d62q")).install("ide-d",!0),atom.packages.enablePackage("atom-ide-base"),atom.notifications.addSuccess("ide-d: atom-ide-base was installed and enabled..."))}getGrammarScopes(){return["source.d","D"]}getLanguageName(){return"D"}getServerName(){return"serve-d"}getConnectionType(){return"stdio"}async startServerProcess(e){const{installServeD:a}=await s("6ng0p"),t=await a();return super.spawn(t,["--require","workspaces"],{cwd:e})}};
//# sourceMappingURL=ide-d.js.map
