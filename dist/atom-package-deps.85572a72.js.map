{"mappings":"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","sources":["node_modules/.pnpm/atom-package-deps@7.2.3/node_modules/atom-package-deps/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar os = require('os');\nvar child_process = require('child_process');\nvar fs = require('fs');\nvar path = require('path');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar os__default = /*#__PURE__*/_interopDefaultLegacy(os);\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\nvar path__default = /*#__PURE__*/_interopDefaultLegacy(path);\n\nvar indentString = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = typeof os__default['default'].homedir === 'undefined' ? '' : os__default['default'].homedir();\n\nvar cleanStack = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nvar aggregateError = AggregateError;\n\nvar pMap = async (\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Infinity,\n\t\tstopOnError = true\n\t} = {}\n) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!((Number.isSafeInteger(concurrency) || concurrency === Infinity) && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst result = [];\n\t\tconst errors = [];\n\t\tconst iterator = iterable[Symbol.iterator]();\n\t\tlet isRejected = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\n\t\tconst next = () => {\n\t\t\tif (isRejected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = iterator.next();\n\t\t\tconst index = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0) {\n\t\t\t\t\tif (!stopOnError && errors.length !== 0) {\n\t\t\t\t\t\treject(new aggregateError(errors));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\t\t\t\t\tresult[index] = await mapper(element, index);\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\tisRejected = true;\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\tfor (let i = 0; i < concurrency; i++) {\n\t\t\tnext();\n\n\t\t\tif (isIterableDone) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst pMap$1 = (iterable, mapper, options) => new Promise((resolve, reject) => {\n\toptions = Object.assign({\n\t\tconcurrency: Infinity\n\t}, options);\n\n\tif (typeof mapper !== 'function') {\n\t\tthrow new TypeError('Mapper function is required');\n\t}\n\n\tconst {concurrency} = options;\n\n\tif (!(typeof concurrency === 'number' && concurrency >= 1)) {\n\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t}\n\n\tconst ret = [];\n\tconst iterator = iterable[Symbol.iterator]();\n\tlet isRejected = false;\n\tlet isIterableDone = false;\n\tlet resolvingCount = 0;\n\tlet currentIndex = 0;\n\n\tconst next = () => {\n\t\tif (isRejected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItem = iterator.next();\n\t\tconst i = currentIndex;\n\t\tcurrentIndex++;\n\n\t\tif (nextItem.done) {\n\t\t\tisIterableDone = true;\n\n\t\t\tif (resolvingCount === 0) {\n\t\t\t\tresolve(ret);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolvingCount++;\n\n\t\tPromise.resolve(nextItem.value)\n\t\t\t.then(element => mapper(element, i))\n\t\t\t.then(\n\t\t\t\tvalue => {\n\t\t\t\t\tret[i] = value;\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tisRejected = true;\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tfor (let i = 0; i < concurrency; i++) {\n\t\tnext();\n\n\t\tif (isIterableDone) {\n\t\t\tbreak;\n\t\t}\n\t}\n});\n\nvar pMap_1 = pMap$1;\n// TODO: Remove this for the next major release\nvar _default = pMap$1;\npMap_1.default = _default;\n\nconst pFilter = async (iterable, filterer, options) => {\n\tconst values = await pMap_1(\n\t\titerable,\n\t\t(element, index) => Promise.all([filterer(element, index), element]),\n\t\toptions\n\t);\n\treturn values.filter(value => Boolean(value[0])).map(value => value[1]);\n};\n\nvar pFilter_1 = pFilter;\n// TODO: Remove this for the next major release\nvar _default$1 = pFilter;\npFilter_1.default = _default$1;\n\nconst IS_ATOM = typeof atom !== 'undefined';\nconst IS_DEV = typeof atom !== 'undefined' && (atom.inDevMode() || atom.inSpecMode());\nconst IGNORED_CONFIG_NAME = 'atom-package-deps.ignored';\n\n/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nvar escapeHtml_1 = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n\nasync function spawnInternal(command, args, options) {\n    const spawnedProcess = child_process.spawn(command, args, options);\n    const promise = new Promise((resolve, reject) => {\n        const output = {\n            stdout: spawnedProcess.stdout ? [] : null,\n            stderr: spawnedProcess.stderr ? [] : null,\n        };\n        spawnedProcess.on('error', reject);\n        if (spawnedProcess.stdout) {\n            spawnedProcess.stdout.on('data', function (chunk) {\n                output.stdout.push(chunk);\n                if (options.handleStdout) {\n                    options.handleStdout(chunk);\n                }\n            });\n        }\n        if (spawnedProcess.stderr) {\n            spawnedProcess.stderr.on('data', function (chunk) {\n                output.stderr.push(chunk);\n                if (options.handleStderr) {\n                    options.handleStderr(chunk);\n                }\n            });\n        }\n        spawnedProcess.on('close', code => {\n            let outputStdout = null;\n            if (output.stdout != null) {\n                outputStdout =\n                    options.encoding === null || options.encoding === 'buffer'\n                        ? Buffer.concat(output.stdout)\n                        : output.stdout.join('');\n            }\n            let outputStderr = null;\n            if (output.stderr != null) {\n                outputStderr =\n                    options.encoding === null || options.encoding === 'buffer'\n                        ? Buffer.concat(output.stderr)\n                        : output.stderr.join('');\n            }\n            resolve({\n                exitCode: code,\n                stdout: outputStdout,\n                stderr: outputStderr,\n            });\n        });\n    });\n    options.handleChildProcess(spawnedProcess);\n    return promise;\n}\nfunction spawn(command, args, options) {\n    let spawnedProcess;\n    const promise = spawnInternal(command, args, {\n        ...options,\n        handleChildProcess(_spawnedProcess) {\n            spawnedProcess = _spawnedProcess;\n        },\n    });\n    promise.kill = function (signal) {\n        // TODO: kill all subprocesses on windows with wmic?\n        return spawnedProcess.kill(signal);\n    };\n    return promise;\n}\n\nvar semverCompare = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n\nasync function getDependencies(packageName) {\n  const packageModule = atom.packages.getLoadedPackage(packageName);\n  const packageDependencies = packageModule && packageModule.metadata['package-deps'];\n  return Array.isArray(packageDependencies) ? packageDependencies : [];\n}\nasync function resolveDependencyPath(packageName) {\n  return atom.packages.resolvePackagePath(packageName);\n}\nasync function getInstalledDependencyVersion(dependency) {\n  var _packageModule$metada;\n\n  const packageModule = atom.packages.getLoadedPackage(dependency.name);\n  return packageModule == null ? null : (_packageModule$metada = packageModule.metadata.version) !== null && _packageModule$metada !== void 0 ? _packageModule$metada : null;\n}\n\nasync function getDependencies$1(packageName) {\n  let packageStats = null;\n\n  try {\n    packageStats = await fs__default['default'].promises.stat(packageName);\n  } catch (_) {// No Op\n  }\n\n  if (packageStats == null || !packageStats.isDirectory()) {\n    throw new Error(`[Package-Deps] Expected packageName to be a readable directory in Node.js invocation`);\n  }\n\n  let parsed = null;\n\n  try {\n    const contents = await fs__default['default'].promises.readFile(path__default['default'].join(packageName, 'package.json'), 'utf8');\n    parsed = JSON.parse(contents);\n  } catch (_) {// Ignore JSON read errors and such\n  }\n\n  const packageDependencies = parsed == null || typeof parsed !== 'object' ? [] : parsed['package-deps'];\n  return Array.isArray(packageDependencies) ? packageDependencies : [];\n}\nasync function resolveDependencyPath$1(packageName) {\n  var _process$env$ATOM_HOM;\n\n  const packageDirectory = path__default['default'].join((_process$env$ATOM_HOM = process.env.ATOM_HOME) !== null && _process$env$ATOM_HOM !== void 0 ? _process$env$ATOM_HOM : path__default['default'].join(os__default['default'].homedir(), '.atom'), 'packages', packageName);\n\n  try {\n    await fs__default['default'].promises.access(packageDirectory, fs__default['default'].constants.R_OK);\n    return packageDirectory;\n  } catch (_) {\n    return null;\n  }\n}\nasync function getInstalledDependencyVersion$1(dependency) {\n  var _manifest$version, _manifest;\n\n  const {\n    directory\n  } = dependency;\n\n  if (directory == null) {\n    // Not possible to get version without resolved directory in Node.js version\n    return null;\n  }\n\n  let manifest = null;\n\n  try {\n    manifest = JSON.parse(await fs__default['default'].promises.readFile(path__default['default'].join(directory, 'package.json'), 'utf8'));\n  } catch (_) {\n    return null;\n  }\n\n  return (_manifest$version = (_manifest = manifest) === null || _manifest === void 0 ? void 0 : _manifest.version) !== null && _manifest$version !== void 0 ? _manifest$version : null;\n}\n\n/**\n * Internal helpers\n */\n\nasync function getInstalledDependencyVersion$2(dependency) {\n  if (IS_ATOM) {\n    const atomPackageVersion = await getInstalledDependencyVersion(dependency);\n\n    if (atomPackageVersion) {\n      return atomPackageVersion;\n    } // If the package isn't activated, it won't be loaded, so fallback to reading manifest file instead\n\n  }\n\n  return getInstalledDependencyVersion$1(dependency);\n}\n/**\n * Exported helpers\n */\n\n\nconst resolveDependencyPath$2 = IS_ATOM ? resolveDependencyPath : resolveDependencyPath$1;\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message !== null && message !== void 0 ? message : 'Invariant violation');\n  }\n}\nasync function getDependencies$2(name) {\n  const dependencies = await (IS_ATOM ? getDependencies(name) : getDependencies$1(name));\n\n  if (IS_DEV) {\n    invariant(Array.isArray(dependencies), `Dependencies for ${name} are not a valid array`);\n    dependencies.forEach((item, index) => {\n      if (Array.isArray(item)) {\n        item.forEach((subitem, subindex) => {\n          const invalidMessage = `Dependency#${index}#${subindex} for ${name} is invalid`;\n          invariant(typeof subitem.name === 'string' && subitem.name.length > 0, invalidMessage);\n          invariant(subitem.minimumVersion == null || typeof subitem.minimumVersion === 'string' && subitem.minimumVersion.length > 0, invalidMessage);\n        });\n        invariant(item.length > 0, `Dependency#${index} for ${name} has no group items`);\n      } else {\n        const invalidMessage = `Dependency#${index} for ${name} is invalid`;\n        invariant(typeof item.name === 'string' && item.name.length > 0, invalidMessage);\n        invariant(item.minimumVersion == null || typeof item.minimumVersion === 'string' && item.minimumVersion.length > 0, invalidMessage);\n      }\n    });\n  }\n\n  return dependencies;\n}\nasync function shouldInstallDependency(dependency) {\n  if (dependency.directory == null) {\n    // Not installed, so install\n    return true;\n  }\n\n  if (dependency.minimumVersion == null) {\n    // Already installed and no version defined, so skip\n    return false;\n  }\n\n  const version = await getInstalledDependencyVersion$2(dependency);\n\n  if (version == null) {\n    // Unable to get current version, so install\n    return true;\n  }\n\n  return semverCompare(dependency.minimumVersion, version) === 1;\n}\nfunction isPackageIgnored(name) {\n  var _atom$config$get;\n\n  if (!IS_ATOM) {\n    // Never ignored in CLI\n    return false;\n  }\n\n  const ignoredPackages = (_atom$config$get = atom.config.get(IGNORED_CONFIG_NAME)) !== null && _atom$config$get !== void 0 ? _atom$config$get : [];\n\n  if (ignoredPackages.includes(name)) {\n    return true;\n  }\n\n  return false;\n}\nfunction markPackageAsIgnored(name) {\n  var _atom$config$get2;\n\n  if (!IS_ATOM) {\n    // No op in CLI\n    return;\n  }\n\n  const ignoredPackages = new Set((_atom$config$get2 = atom.config.get(IGNORED_CONFIG_NAME)) !== null && _atom$config$get2 !== void 0 ? _atom$config$get2 : []);\n  ignoredPackages.add(name);\n  atom.config.set(IGNORED_CONFIG_NAME, Array.from(ignoredPackages));\n}\nconst INSTALL_VALID_TICKS = new Set(['✓', 'done']);\nconst INSTALL_VALIDATION_REGEXP = /(?:Installing|Moving) (.*?) to .* (.*)/; // Example success output: Uninstalling linter-ui-default ✓\n\nasync function installPackage(dependency) {\n  const apmPath = IS_ATOM ? `\"${atom.packages.getApmPath()}\"` : 'apm';\n  const {\n    stdout,\n    stderr\n  } = await spawn(apmPath, ['install', dependency.name, '--production', '--color', 'false'], {\n    shell: true\n  });\n  const match = INSTALL_VALIDATION_REGEXP.exec(stdout.trim());\n\n  if (match != null && INSTALL_VALID_TICKS.has(match[2])) {\n    // Installation complete and verified\n    return;\n  }\n\n  const error = new Error(`Error installing dependency: ${dependency.name}`);\n  error.stack = stderr.trim();\n  throw error;\n}\nasync function getResolvedDependency(item) {\n  // string entry\n  if (typeof item === 'string') {\n    return {\n      name: item,\n      directory: await resolveDependencyPath$2(item)\n    };\n  }\n\n  if ('name' in item) {\n    return { ...item,\n      directory: await resolveDependencyPath$2(item.name)\n    };\n  }\n\n  console.error(`This package-deps entry is not valid. Please see https://github.com/steelbrain/package-deps#how-it-works`, {\n    entry: item\n  });\n  throw Error(`The package-deps entry is not valid. Please see https://github.com/steelbrain/package-deps#how-it-works`);\n}\n\nlet showResetInstruction = true;\nfunction confirmPackagesToInstall({\n  packageName,\n  dependencies\n}) {\n  return new Promise(resolve => {\n    const ungroupedDependencies = dependencies.filter(item => !Array.isArray(item));\n    const groupedDependencies = dependencies.filter(item => Array.isArray(item));\n    const skipGroups = groupedDependencies.length === 0;\n    const detail = skipGroups ? ungroupedDependencies.map(item => item.name).join(', ') : 'Something went wrong. Check your developer console';\n    const groupChoices = groupedDependencies.map(item => item[0]); // If Atom \"notifications\" package is disabled output a warning in case no other notifications package is installed.\n\n    if (atom.packages.isPackageDisabled('notifications')) {\n      console.warn(`Enable notifications to install dependencies for ${packageName}`);\n    }\n\n    const notification = atom.notifications.addInfo(`${packageName} needs to install dependencies`, {\n      dismissable: true,\n      icon: 'cloud-download',\n      detail,\n      description: `Install dependenc${dependencies.length === 1 ? 'y' : 'ies'}?`,\n      buttons: [{\n        text: 'Yes',\n        onDidClick: () => {\n          if (skipGroups) {\n            resolve(ungroupedDependencies);\n          } else {\n            resolve(ungroupedDependencies.concat(groupChoices));\n          }\n\n          notification.dismiss();\n        }\n      }, {\n        text: 'No Thanks',\n        onDidClick: () => {\n          notification.dismiss();\n        }\n      }, {\n        text: 'Never',\n        onDidClick: () => {\n          markPackageAsIgnored(packageName);\n\n          if (showResetInstruction) {\n            showResetInstruction = false;\n            atom.notifications.addInfo('How to reset package-deps memory', {\n              dismissable: true,\n              description: \"To modify the list of ignored files invoke 'Application: Open Your Config' and change the 'atom-package-deps' section\"\n            });\n          }\n\n          notification.dismiss();\n        }\n      }]\n    });\n    notification.onDidDismiss(() => resolve([]));\n\n    if (skipGroups) {\n      return;\n    } // Handle groups\n\n\n    try {\n      var _notificationView$ele;\n\n      const notificationView = atom.views.getView(notification);\n      const notificationElement = (_notificationView$ele = notificationView === null || notificationView === void 0 ? void 0 : notificationView.element) !== null && _notificationView$ele !== void 0 ? _notificationView$ele : null;\n\n      if (notificationElement == null) {\n        throw new Error('Unable to get notification element from view');\n      }\n\n      const notificationContent = notificationElement.querySelector('.detail-content');\n\n      if (notificationContent == null) {\n        throw new Error('Content detail container not found inside the notification');\n      } // Clear the contents and add some skel\n\n\n      notificationContent.innerHTML = ''; // Add list of ungroup dependencies to the top of the notification\n\n      if (ungroupedDependencies.length > 0) {\n        const ungroupedLine = document.createElement('div');\n        ungroupedLine.innerHTML = `Packages without choices: <br /><ul><li>${ungroupedDependencies.map(item => escapeHtml_1(item.name)).join('</li><li>')}</li></ul>`;\n        notificationContent.appendChild(ungroupedLine);\n      } // Create a label line for groups\n\n\n      const groupLabelLine = document.createElement('div');\n      groupLabelLine.innerHTML = `Packages with choices:`;\n      notificationContent.appendChild(groupLabelLine); // Create one line per group with a select inside\n\n      const groupedList = document.createElement('ul');\n      groupedDependencies.forEach((item, index) => {\n        const listItem = document.createElement('li');\n        const select = document.createElement('select');\n        select.innerHTML = item.map(subitem => `<option>${escapeHtml_1(subitem.name)}</option>`).join('\\n');\n        select.addEventListener('change', () => {\n          // Change the selected value for this index for resolve to use\n          const subitem = item.find(entry => entry.name === select.value);\n\n          if (subitem != null) {\n            groupChoices[index] = subitem;\n          }\n        });\n        listItem.style.marginTop = '5px';\n        listItem.appendChild(select);\n        groupedList.appendChild(listItem);\n      });\n      notificationContent.appendChild(groupedList);\n    } catch (err) {\n      console.error('[Package-Deps] Error during showing package choices to user', err);\n    }\n  });\n}\nfunction getView({\n  packageName,\n  dependencies\n}) {\n  const failed = [];\n  const notification = atom.notifications.addInfo(`Installing ${packageName} dependencies`, {\n    detail: `Installing ${dependencies.map(item => item.name).join(', ')}`,\n    dismissable: true\n  });\n  const progress = document.createElement('progress');\n  progress.max = dependencies.length;\n  progress.style.width = '100%';\n\n  try {\n    var _notificationView$ele2;\n\n    const notificationView = atom.views.getView(notification);\n    const notificationElement = (_notificationView$ele2 = notificationView === null || notificationView === void 0 ? void 0 : notificationView.element) !== null && _notificationView$ele2 !== void 0 ? _notificationView$ele2 : null;\n\n    if (notificationElement == null) {\n      throw new Error('Unable to get notification element from view');\n    }\n\n    const notificationContent = notificationElement.querySelector('.detail-content');\n\n    if (notificationContent == null) {\n      throw new Error('Content detail container not found inside the notification');\n    }\n\n    notificationContent.appendChild(progress);\n  } catch (err) {\n    console.error('[Package-Deps] Error during showing installation progress to user', err);\n  }\n\n  return {\n    handleFailure({\n      dependency,\n      error\n    }) {\n      var _error$stack;\n\n      failed.push(dependency.name);\n      progress.value += 1;\n      console.error(`[Package-Deps] Unable to install ${dependency.name}, Error:`, (_error$stack = error === null || error === void 0 ? void 0 : error.stack) !== null && _error$stack !== void 0 ? _error$stack : error);\n    },\n\n    handleDependencyInstalled(dependency) {\n      progress.value += 1;\n    },\n\n    handleComplete() {\n      notification.dismiss();\n\n      if (failed.length > 0) {\n        atom.notifications.addWarning(`Failed to install ${packageName} dependencies`, {\n          detail: `These packages were not installed, check your console\\nfor more info.\\n${failed.join('\\n')}`,\n          dismissable: true\n        });\n      } else {\n        atom.notifications.addSuccess(`Installed ${packageName} dependencies`, {\n          detail: `Installed ${dependencies.map(item => item.name).join(', ')}`\n        });\n      }\n\n      Promise.all(dependencies.map(item => {\n        if (!failed.includes(item.name)) {\n          return atom.packages.activatePackage(item.name);\n        }\n\n        return null;\n      })).catch(err => {\n        console.error(`[Package-Deps] Error activating installed packages for ${packageName}`, err);\n      });\n    }\n\n  };\n}\n\nasync function confirmPackagesToInstall$1({\n  dependencies\n}) {\n  // No user interaction on the CLI. Install the first (aka \"default\" choice) package\n  return dependencies.map(item => Array.isArray(item) ? item[0] : item);\n}\nfunction getView$1({\n  dependencies\n}) {\n  let failed = false;\n  console.log(`Installing dependencies:\\n${dependencies.map(item => `  - ${item.name}`).join('\\n')}`);\n  return {\n    handleFailure({\n      dependency,\n      error\n    }) {\n      var _error$stack;\n\n      failed = true;\n      console.error(`Unable to install ${dependency.name}, Error:`, (_error$stack = error === null || error === void 0 ? void 0 : error.stack) !== null && _error$stack !== void 0 ? _error$stack : error);\n    },\n\n    handleDependencyInstalled(dependency) {\n      console.log('Successfully installed', dependency.name);\n    },\n\n    handleComplete() {\n      console.log('Installation complete');\n\n      if (failed) {\n        // Fail the invocation\n        process.exitCode = 1;\n      }\n    }\n\n  };\n}\n\nconst getView$2 = IS_ATOM ? getView : getView$1;\nconst confirmPackagesToInstall$2 = IS_ATOM ? confirmPackagesToInstall : confirmPackagesToInstall$1;\n\nasync function install(packageName, hideUserPrompt = false) {\n  invariant(typeof packageName === 'string' && packageName.length > 0, '[Package-Deps] Package name is required');\n\n  if (isPackageIgnored(packageName)) {\n    // User ignored this package\n    return;\n  } // Get list of relevant dependencies\n\n\n  const dependencies = await getDependencies$2(packageName);\n\n  if (dependencies.length === 0) {\n    // Short-circuit\n    return;\n  } // Resolve directories of relevant dependencies\n\n\n  const resolvedDependencies = await Promise.all(dependencies.map(async item => {\n    if (Array.isArray(item)) {\n      return Promise.all(item.map(getResolvedDependency));\n    }\n\n    return getResolvedDependency(item);\n  })); // Filter out already installed, in range dependencies\n  // If one dependency from a group is already installed, whole group is ignored\n\n  const dependenciesToInstall = await pFilter_1(resolvedDependencies, async function (item) {\n    if (Array.isArray(item)) {\n      return (await Promise.all(item.map(subitem => shouldInstallDependency(subitem)))).every(Boolean);\n    }\n\n    return shouldInstallDependency(item);\n  });\n\n  if (dependenciesToInstall.length === 0) {\n    // Short-circuit if all have been skipped\n    return;\n  }\n\n  let chosenDependencies;\n\n  if (!hideUserPrompt) {\n    chosenDependencies = await confirmPackagesToInstall$2({\n      packageName,\n      dependencies: dependenciesToInstall\n    });\n  } else {\n    // prompt-less installation\n    chosenDependencies = dependenciesToInstall.map(dep => {\n      if (Array.isArray(dep)) {\n        return dep[0];\n      }\n\n      return dep;\n    });\n  }\n\n  if (chosenDependencies.length === 0) {\n    // Short-circuit if user interaction cancelled all\n    return;\n  }\n\n  const view = getView$2({\n    packageName,\n    dependencies: chosenDependencies\n  });\n  await pMap(chosenDependencies, async function (dependency) {\n    try {\n      await installPackage(dependency);\n      view.handleDependencyInstalled(dependency);\n    } catch (err) {\n      view.handleFailure({\n        dependency,\n        error: err\n      });\n    }\n  }, {\n    concurrency: 2\n  });\n  view.handleComplete();\n}\n\nexports.install = install;\n"],"names":["$848ea5d074acd496825c50b493d29862$var$_interopDefaultLegacy","e","$848ea5d074acd496825c50b493d29862$var$invariant","condition","message1","Error","$848ea5d074acd496825c50b493d29862$var$shouldInstallDependency","dependency","directory","minimumVersion","version","async","$848ea5d074acd496825c50b493d29862$var$IS_ATOM","atomPackageVersion","_packageModule$metada","packageModule","atom","packages","getLoadedPackage","name","metadata","$848ea5d074acd496825c50b493d29862$var$getInstalledDependencyVersion","_manifest$version","_manifest","manifest","JSON","parse","$848ea5d074acd496825c50b493d29862$var$fs__default","promises","readFile","$848ea5d074acd496825c50b493d29862$var$path__default","join","_","$848ea5d074acd496825c50b493d29862$var$getInstalledDependencyVersion$1","$848ea5d074acd496825c50b493d29862$var$getInstalledDependencyVersion$2","a","b","pa","split","pb","i","na","nb","isNaN","$848ea5d074acd496825c50b493d29862$var$semverCompare","$848ea5d074acd496825c50b493d29862$var$getResolvedDependency","item","$848ea5d074acd496825c50b493d29862$var$resolveDependencyPath$2","console","error","entry","Object","defineProperty","module","exports","value","$848ea5d074acd496825c50b493d29862$var$os__default","$22KIE$os","$22KIE$fs","$22KIE$path","$848ea5d074acd496825c50b493d29862$var$extractPathRegex","$848ea5d074acd496825c50b493d29862$var$pathRegex","$848ea5d074acd496825c50b493d29862$var$homeDir","homedir","$848ea5d074acd496825c50b493d29862$var$AggregateError","errors","Array","isArray","TypeError","message","map","assign","stack","replace","$848ea5d074acd496825c50b493d29862$var$cleanInternalStack","options","pretty","filter","line","pathMatches","match","includes","test","trim","m","p1","String","string","count","indent","includeEmptyLines","repeat","$848ea5d074acd496825c50b493d29862$var$indentString","super","this","Symbol","iterator","_errors","$848ea5d074acd496825c50b493d29862$var$aggregateError","$848ea5d074acd496825c50b493d29862$var$pMap$1","iterable","mapper","Promise","resolve","reject","concurrency","Infinity","ret","isRejected","isIterableDone","resolvingCount","currentIndex","next","nextItem","done","then","element","$848ea5d074acd496825c50b493d29862$var$pMap_1","default","$848ea5d074acd496825c50b493d29862$var$pFilter","filterer","index","all","$848ea5d074acd496825c50b493d29862$var$pFilter_1","$848ea5d074acd496825c50b493d29862$var$IS_DEV","$848ea5d074acd496825c50b493d29862$var$IGNORED_CONFIG_NAME","$848ea5d074acd496825c50b493d29862$var$matchHtmlRegExp","$848ea5d074acd496825c50b493d29862$var$escapeHtml_1","escape","str","exec","html","lastIndex","length","charCodeAt","substring","packageName","resolvePackagePath","_process$env$ATOM_HOM","packageDirectory","process","env","ATOM_HOME","access","constants","R_OK","$848ea5d074acd496825c50b493d29862$var$INSTALL_VALID_TICKS","Set","$848ea5d074acd496825c50b493d29862$var$INSTALL_VALIDATION_REGEXP","$848ea5d074acd496825c50b493d29862$var$showResetInstruction","$848ea5d074acd496825c50b493d29862$var$getView$2","dependencies","failed","notification","notifications","addInfo","detail","dismissable","progress","document","createElement","max","style","width","_notificationView$ele2","notificationView","views","getView","notificationElement","notificationContent","querySelector","appendChild","err","handleFailure","_error$stack","push","handleDependencyInstalled","handleComplete","dismiss","addWarning","addSuccess","activatePackage","catch","log","exitCode","$848ea5d074acd496825c50b493d29862$var$confirmPackagesToInstall$2","ungroupedDependencies","groupedDependencies","skipGroups","groupChoices","isPackageDisabled","warn","icon","description","buttons","text","onDidClick","concat","_atom$config$get2","ignoredPackages","config","get","add","set","from","$848ea5d074acd496825c50b493d29862$var$markPackageAsIgnored","onDidDismiss","_notificationView$ele","innerHTML","ungroupedLine","groupLabelLine","groupedList","forEach","listItem","select","subitem","addEventListener","find","marginTop","install","hideUserPrompt","_atom$config$get","packageDependencies","$848ea5d074acd496825c50b493d29862$var$getDependencies","packageStats","stat","isDirectory","parsed","contents","$848ea5d074acd496825c50b493d29862$var$getDependencies$1","subindex","invalidMessage","$848ea5d074acd496825c50b493d29862$var$getDependencies$2","resolvedDependencies","dependenciesToInstall","every","Boolean","chosenDependencies","dep","view","stopOnError","Number","isSafeInteger","result","errors1","$848ea5d074acd496825c50b493d29862$var$pMap","apmPath","getApmPath","stdout","stderr","command","args","spawnedProcess","promise","$22KIE$spawn","output","on","chunk","handleStdout","handleStderr","code","outputStdout","encoding","Buffer","outputStderr","handleChildProcess","$848ea5d074acd496825c50b493d29862$var$spawnInternal","shell","_spawnedProcess","kill","signal","$848ea5d074acd496825c50b493d29862$var$spawn","has","$848ea5d074acd496825c50b493d29862$var$installPackage"],"version":3,"file":"atom-package-deps.85572a72.js.map"}