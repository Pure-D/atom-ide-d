var e=require("os"),n=require("child_process").spawn,t=require("fs"),r=require("path");("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire4554.register("2ZqOd",(function(a,o){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function s(e,n){if(!e)throw Error(null!=n?n:"Invariant violation")}async function l(e){if(null==e.directory)return!0;if(null==e.minimumVersion)return!1;const n=await(async e=>{if(E){const n=await(async e=>{var n;const t=atom.packages.getLoadedPackage(e.name);return null==t?null:null!==(n=t.metadata.version)&&void 0!==n?n:null})(e);if(n)return n}return(async e=>{var n,t;const{directory:r}=e;if(null==r)return null;let a=null;try{a=JSON.parse(await u.default.promises.readFile(p.default.join(r,"package.json"),"utf8"))}catch(e){return null}return null!==(n=null===(t=a)||void 0===t?void 0:t.version)&&void 0!==n?n:null})(e)})(e);return null==n||1===((e,n)=>{for(var t=e.split("."),r=n.split("."),a=0;3>a;a++){var o=+t[a],i=+r[a];if(o>i)return 1;if(i>o)return-1;if(!isNaN(o)&&isNaN(i))return 1;if(isNaN(o)&&!isNaN(i))return-1}return 0})(e.minimumVersion,n)}async function c(e){if("string"==typeof e)return{name:e,directory:await x(e)};if("name"in e)return{...e,directory:await x(e.name)};throw console.error("This package-deps entry is not valid. Please see https://github.com/steelbrain/package-deps#how-it-works",{entry:e}),Error("The package-deps entry is not valid. Please see https://github.com/steelbrain/package-deps#how-it-works")}Object.defineProperty(a.exports,"__esModule",{value:!0});var d=i(e),u=i(t),p=i(r);const m=/\s+at.*(?:\(|\s)(.*)\)?/,f=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,g=void 0===d.default.homedir?"":d.default.homedir();class y extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError("Expected input to be an Array, got "+typeof e);let n=(e=[...e].map((e=>e instanceof Error?e:null!==e&&"object"==typeof e?Object.assign(Error(e.message),e):Error(e)))).map((e=>{return"string"==typeof e.stack?(e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""))((n=e.stack,t=Object.assign({pretty:!1},t),n.replace(/\\/g,"/").split("\n").filter((e=>{const n=e.match(m);if(null===n||!n[1])return!0;const t=n[1];return!t.includes(".app/Contents/Resources/electron.asar")&&!t.includes(".app/Contents/Resources/default_app.asar")&&!f.test(t)})).filter((e=>""!==e.trim())).map((e=>t.pretty?e.replace(m,((e,n)=>e.replace(n,n.replace(g,"~")))):e)).join("\n"))):e+"";var n,t})).join("\n");n="\n"+((e,n=1,t)=>{if(t={indent:" ",includeEmptyLines:!1,...t},"string"!=typeof e)throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if("number"!=typeof n)throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof n}\``);if("string"!=typeof t.indent)throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof t.indent}\``);return 0===n?e:e.replace(t.includeEmptyLines?/^/gm:/^(?!\s*$)/gm,t.indent.repeat(n))})(n,4),super(n),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:e})}*[Symbol.iterator](){for(const e of this._errors)yield e}}var h=y;const w=(e,n,t)=>new Promise(((r,a)=>{if(t=Object.assign({concurrency:1/0},t),"function"!=typeof n)throw new TypeError("Mapper function is required");const{concurrency:o}=t;if("number"!=typeof o||1>o)throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${o}\` (${typeof o})`);const i=[],s=e[Symbol.iterator]();let l=!1,c=!1,d=0,u=0;const p=()=>{if(l)return;const e=s.next(),t=u;if(u++,e.done)return c=!0,void(0===d&&r(i));d++,Promise.resolve(e.value).then((e=>n(e,t))).then((e=>{i[t]=e,d--,p()}),(e=>{l=!0,a(e)}))};for(let e=0;o>e&&(p(),!c);e++);}));var v=w;v.default=w;const k=async(e,n,t)=>(await v(e,((e,t)=>Promise.all([n(e,t),e])),t)).filter((e=>!!e[0])).map((e=>e[1]));var b=k;b.default=k;const E="undefined"!=typeof atom,P="undefined"!=typeof atom&&!1,A="atom-package-deps.ignored";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */
var j=/["'&<>]/,$=e=>{var n,t=""+e,r=j.exec(t);if(!r)return t;var a="",o=0,i=0;for(o=r.index;t.length>o;o++){switch(t.charCodeAt(o)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}i!==o&&(a+=t.substring(i,o)),i=o+1,a+=n}return i!==o?a+t.substring(i,o):a};const x=E?async e=>atom.packages.resolvePackagePath(e):async e=>{var n;const t=p.default.join(null!==(n=process.env.ATOM_HOME)&&void 0!==n?n:p.default.join(d.default.homedir(),".atom"),"packages",e);try{return await u.default.promises.access(t,u.default.constants.R_OK),t}catch(e){return null}},C=new Set(["âœ“","done"]),T=/(?:Installing|Moving) (.*?) to .* (.*)/;let D=!0;const N=E?({packageName:e,dependencies:n})=>{const t=[],r=atom.notifications.addInfo(`Installing ${e} dependencies`,{detail:"Installing "+n.map((e=>e.name)).join(", "),dismissable:!0}),a=document.createElement("progress");a.max=n.length,a.style.width="100%";try{var o;const e=atom.views.getView(r),n=null!==(o=null==e?void 0:e.element)&&void 0!==o?o:null;if(null==n)throw Error("Unable to get notification element from view");const t=n.querySelector(".detail-content");if(null==t)throw Error("Content detail container not found inside the notification");t.appendChild(a)}catch(e){console.error("[Package-Deps] Error during showing installation progress to user",e)}return{handleFailure({dependency:e,error:n}){var r;t.push(e.name),a.value+=1,console.error(`[Package-Deps] Unable to install ${e.name}, Error:`,null!==(r=null==n?void 0:n.stack)&&void 0!==r?r:n)},handleDependencyInstalled(e){a.value+=1},handleComplete(){r.dismiss(),t.length>0?atom.notifications.addWarning(`Failed to install ${e} dependencies`,{detail:"These packages were not installed, check your console\nfor more info.\n"+t.join("\n"),dismissable:!0}):atom.notifications.addSuccess(`Installed ${e} dependencies`,{detail:"Installed "+n.map((e=>e.name)).join(", ")}),Promise.all(n.map((e=>t.includes(e.name)?null:atom.packages.activatePackage(e.name)))).catch((n=>{console.error("[Package-Deps] Error activating installed packages for "+e,n)}))}}}:({dependencies:e})=>{let n=!1;return console.log("Installing dependencies:\n"+e.map((e=>"  - "+e.name)).join("\n")),{handleFailure({dependency:e,error:t}){var r;n=!0,console.error(`Unable to install ${e.name}, Error:`,null!==(r=null==t?void 0:t.stack)&&void 0!==r?r:t)},handleDependencyInstalled(e){console.log("Successfully installed",e.name)},handleComplete(){console.log("Installation complete"),n&&(process.exitCode=1)}}},I=E?({packageName:e,dependencies:n})=>new Promise((t=>{const r=n.filter((e=>!Array.isArray(e))),a=n.filter((e=>Array.isArray(e))),o=0===a.length,i=o?r.map((e=>e.name)).join(", "):"Something went wrong. Check your developer console",s=a.map((e=>e[0]));atom.packages.isPackageDisabled("notifications")&&console.warn("Enable notifications to install dependencies for "+e);const l=atom.notifications.addInfo(e+" needs to install dependencies",{dismissable:!0,icon:"cloud-download",detail:i,description:`Install dependenc${1===n.length?"y":"ies"}?`,buttons:[{text:"Yes",onDidClick(){t(o?r:r.concat(s)),l.dismiss()}},{text:"No Thanks",onDidClick(){l.dismiss()}},{text:"Never",onDidClick(){(e=>{var n;if(!E)return;const t=new Set(null!==(n=atom.config.get(A))&&void 0!==n?n:[]);t.add(e),atom.config.set(A,Array.from(t))})(e),D&&(D=!1,atom.notifications.addInfo("How to reset package-deps memory",{dismissable:!0,description:"To modify the list of ignored files invoke 'Application: Open Your Config' and change the 'atom-package-deps' section"})),l.dismiss()}}]});if(l.onDidDismiss((()=>t([]))),!o)try{var c;const e=atom.views.getView(l),n=null!==(c=null==e?void 0:e.element)&&void 0!==c?c:null;if(null==n)throw Error("Unable to get notification element from view");const t=n.querySelector(".detail-content");if(null==t)throw Error("Content detail container not found inside the notification");if(t.innerHTML="",r.length>0){const e=document.createElement("div");e.innerHTML=`Packages without choices: <br /><ul><li>${r.map((e=>$(e.name))).join("</li><li>")}</li></ul>`,t.appendChild(e)}const o=document.createElement("div");o.innerHTML="Packages with choices:",t.appendChild(o);const i=document.createElement("ul");a.forEach(((e,n)=>{const t=document.createElement("li"),r=document.createElement("select");r.innerHTML=e.map((e=>`<option>${$(e.name)}</option>`)).join("\n"),r.addEventListener("change",(()=>{const t=e.find((e=>e.name===r.value));null!=t&&(s[n]=t)})),t.style.marginTop="5px",t.appendChild(r),i.appendChild(t)})),t.appendChild(i)}catch(e){console.error("[Package-Deps] Error during showing package choices to user",e)}})):async({dependencies:e})=>e.map((e=>Array.isArray(e)?e[0]:e));a.exports.install=async(e,t=!1)=>{if(s("string"==typeof e&&e.length>0,"[Package-Deps] Package name is required"),r=e,E&&(null!==(a=atom.config.get(A))&&void 0!==a?a:[]).includes(r))return;var r,a;const o=await(async e=>{const n=await(E?(async e=>{const n=atom.packages.getLoadedPackage(e),t=n&&n.metadata["package-deps"];return Array.isArray(t)?t:[]})(e):(async e=>{let n=null;try{n=await u.default.promises.stat(e)}catch(e){}if(null==n||!n.isDirectory())throw Error("[Package-Deps] Expected packageName to be a readable directory in Node.js invocation");let t=null;try{const n=await u.default.promises.readFile(p.default.join(e,"package.json"),"utf8");t=JSON.parse(n)}catch(e){}const r=null==t||"object"!=typeof t?[]:t["package-deps"];return Array.isArray(r)?r:[]})(e));return P&&(s(Array.isArray(n),`Dependencies for ${e} are not a valid array`),n.forEach(((n,t)=>{if(Array.isArray(n))n.forEach(((n,r)=>{const a=`Dependency#${t}#${r} for ${e} is invalid`;s("string"==typeof n.name&&n.name.length>0,a),s(null==n.minimumVersion||"string"==typeof n.minimumVersion&&n.minimumVersion.length>0,a)})),s(n.length>0,`Dependency#${t} for ${e} has no group items`);else{const r=`Dependency#${t} for ${e} is invalid`;s("string"==typeof n.name&&n.name.length>0,r),s(null==n.minimumVersion||"string"==typeof n.minimumVersion&&n.minimumVersion.length>0,r)}}))),n})(e);if(0===o.length)return;const i=await Promise.all(o.map((async e=>Array.isArray(e)?Promise.all(e.map(c)):c(e)))),d=await b(i,(async e=>Array.isArray(e)?(await Promise.all(e.map((e=>l(e))))).every(Boolean):l(e)));if(0===d.length)return;let m;if(m=t?d.map((e=>Array.isArray(e)?e[0]:e)):await I({packageName:e,dependencies:d}),0===m.length)return;const f=N({packageName:e,dependencies:m});await(async(e,n,{concurrency:t=1/0,stopOnError:r=!0}={})=>new Promise(((a,o)=>{if("function"!=typeof n)throw new TypeError("Mapper function is required");if(!Number.isSafeInteger(t)&&t!==1/0||1>t)throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${t}\` (${typeof t})`);const i=[],s=[],l=e[Symbol.iterator]();let c=!1,d=!1,u=0,p=0;const m=()=>{if(c)return;const e=l.next(),t=p;if(p++,e.done)return d=!0,void(0===u&&(r||0===s.length?a(i):o(new h(s))));u++,(async()=>{try{const r=await e.value;i[t]=await n(r,t),u--,m()}catch(e){r?(c=!0,o(e)):(s.push(e),u--,m())}})()};for(let e=0;t>e&&(m(),!d);e++);})))(m,(async e=>{try{await(async e=>{const t=E?`"${atom.packages.getApmPath()}"`:"apm",{stdout:r,stderr:a}=await((e,t,r)=>{let a;const o=(async(e,t,r)=>{const a=n(e,t,r),o=new Promise(((e,n)=>{const t={stdout:a.stdout?[]:null,stderr:a.stderr?[]:null};a.on("error",n),a.stdout&&a.stdout.on("data",(e=>{t.stdout.push(e),r.handleStdout&&r.handleStdout(e)})),a.stderr&&a.stderr.on("data",(e=>{t.stderr.push(e),r.handleStderr&&r.handleStderr(e)})),a.on("close",(n=>{let a=null;null!=t.stdout&&(a=null===r.encoding||"buffer"===r.encoding?Buffer.concat(t.stdout):t.stdout.join(""));let o=null;null!=t.stderr&&(o=null===r.encoding||"buffer"===r.encoding?Buffer.concat(t.stderr):t.stderr.join("")),e({exitCode:n,stdout:a,stderr:o})}))}));return r.handleChildProcess(a),o})(e,t,{shell:!0,handleChildProcess(e){a=e}});return o.kill=e=>a.kill(e),o})(t,["install",e.name,"--production","--color","false"]),o=T.exec(r.trim());if(null!=o&&C.has(o[2]))return;const i=Error("Error installing dependency: "+e.name);throw i.stack=a.trim(),i})(e),f.handleDependencyInstalled(e)}catch(n){f.handleFailure({dependency:e,error:n})}}),{concurrency:2}),f.handleComplete()}}));
//# sourceMappingURL=atom-package-deps.0b87713d.js.map
