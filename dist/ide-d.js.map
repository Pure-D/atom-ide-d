{"mappings":"8iBAAAA,EAAAC,QAAkBC,QAAQC,QAAOC,QAAqB,gDAAsDC,MAAI,IAAOC,EAAc,cC6CrIN,OAAAC,QAAiB,kBA3CaM,EAAAC,oCAE1BC,MAAMC,WACDC,KAAKC,SAASC,gBAAgB,+BAGpBC,GAA6BC,QAAQ,SAAS,GAE3DJ,KAAKC,SAASI,cAAc,iBAC5BL,KAAKM,cAAcC,WAAW,sDAKlCC,mBACE,MAAO,CAAC,WAAY,KAEtBC,kBACE,MAAO,IAETC,gBACE,MAAO,UAGTC,oBACE,MAAO,QAEiCC,yBAEjBC,GAEvB,MAAOC,cAACA,SAAwBnB,EAAA,SAE1BoB,QAAmBD,IAMzB,OAJehB,MAAMkB,MAAMD,EAAY,CAAC,YAAa,cAAe,CAClEE,IAAKJ","sources":["node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-0557bf50dddbdc7f.js","src/ide-d.ts"],"sourcesContent":["module.exports = (Promise.resolve(__parcel__require__(\"./\" + \"installation.433c2925.js\"))).then(() => parcelRequire('1xhaw'));","import { AutoLanguageClient } from \"atom-languageclient\"\n\nclass DLanguageClient extends AutoLanguageClient {\n  async activate() {\n    super.activate()\n    if (!atom.packages.isPackageLoaded(\"atom-ide-base\")) {\n      // install if not installed\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      await (await import(\"atom-package-deps\")).install(\"ide-d\", true)\n      // enable if disabled\n      atom.packages.enablePackage(\"atom-ide-base\")\n      atom.notifications.addSuccess(\"ide-d: atom-ide-base was installed and enabled...\")\n    }\n  }\n\n  /* eslint-disable class-methods-use-this */\n  getGrammarScopes() {\n    return [\"source.d\", \"D\"]\n  }\n  getLanguageName() {\n    return \"D\"\n  }\n  getServerName() {\n    return \"serve-d\"\n  }\n\n  getConnectionType(): \"stdio\" {\n    return \"stdio\"\n  }\n  /* eslint-enable class-methods-use-this */\n\n  async startServerProcess(projectPath: string) {\n    // import only when a D file is opened.\n    const { installServeD } = await import(\"./installation\")\n\n    const serveDPath = await installServeD()\n\n    const serveD = super.spawn(serveDPath, [\"--require\", \"workspaces\"], {\n      cwd: projectPath,\n    })\n\n    return serveD\n  }\n}\n\nmodule.exports = new DLanguageClient()\n"],"names":["module","exports","Promise","resolve","require","then","parcelRequire","$cljxE$atomlanguageclient","AutoLanguageClient","super","activate","atom","packages","isPackageLoaded","$cljxE$atompackagedeps","install","enablePackage","notifications","addSuccess","getGrammarScopes","getLanguageName","getServerName","getConnectionType","startServerProcess","projectPath","installServeD","serveDPath","spawn","cwd"],"version":3,"file":"ide-d.js.map"}